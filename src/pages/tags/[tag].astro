---
import BaseLayout from '../../layouts/Layout.astro';

export async function getStaticPaths() {
  return [
    { params: { tag: "dekton" } },
    { params: { tag: "silestone" } },
    { params: { tag: "sensa" } },
  ];
}

const { tag } = Astro.params;
const allPosts = await Astro.glob('../articulos/*.md');
const filteredPosts = allPosts
  .filter((post) => post.frontmatter.tags?.includes(tag))
  .sort(
    (a, b) =>
      new Date(b.frontmatter.pubDate).getTime() -
      new Date(a.frontmatter.pubDate).getTime(),
  );
---

<BaseLayout title={`Artículos sobre ${tag}`} description='Descubre artículos y consejos sobre superficies de alta calidad como Dekton, Silestone y Sensa. Encuentra inspiración y guía para tus proyectos de diseño y construcción.'>
  <section class="bg-black py-12 text-white">
    <div
      class="flex flex-col md:flex-row max-w-screen-lg md:mx-auto md:items-center md:justify-between px-6 py-6"
    >
      <h1 class="text-2xl font-semibold max-w-2xl mb-4 md:mb-0">
        Entradas etiquetadas con <strong>{tag}</strong>
      </h1>

      <div class="flex space-x-6 font-medium">
        <a class="hover:opacity-50" href="/tags/dekton">Dekton</a>
        <a class="hover:opacity-50" href="/tags/silestone">Silestone</a>
        <a class="hover:opacity-50" href="/tags/sensa">Sensa</a>
        <a class="hover:opacity-50" href="/blog">Ver todo</a>
      </div>
    </div>

    <div class="max-w-screen-lg mx-auto w-full h-px bg-zinc-200 my-5 px-2" />

    <div class="max-w-screen-lg md:mx-auto grid gap-4 grid-cols-1 md:grid-cols-2 mx-2">
      {
        filteredPosts.map((post, index) => (
          <>
            {index === 0 && (
              <div class="bg-zinc-800 hover:opacity-90 transition duration-300 md:col-span-2 rounded-xl">
                <a href={post.url} class="flex flex-col md:flex-row">
                  {post.frontmatter.image?.url && (
                    <img
                      src={post.frontmatter.image.url}
                      alt={post.frontmatter.image.alt || "Imagen del artículo"}
                      class="object-cover h-72 md:h-96 w-full md:w-1/2 rounded-xl"
                    />
                  )}
                  <div class="p-6 flex flex-col justify-center text-white">
                    <div class="mb-2">
                      {post.frontmatter.tags.map((tag) => {
                        let borderColor =
                          tag === "dekton"
                            ? "border-yellow-500"
                            : tag === "silestone"
                            ? "border-[#dbd6ca]"
                            : "border-white";

                        return (
                          <span
                            class={`border ${borderColor} rounded-full px-4 py-1 mr-2 text-sm`}
                          >
                            {tag}
                          </span>
                        );
                      })}
                    </div>
                    <h2 class="text-4xl font-semibold my-4">{post.frontmatter.title}</h2>
                    <p class="text-sm text-zinc-300">{post.frontmatter.description}</p>
                  </div>
                </a>
              </div>
            )}

            {index === 0 && (
              <div class="w-full h-px bg-zinc-200 my-5 md:col-span-2" />
            )}

            {index !== 0 && (
              <div class="bg-zinc-800 hover:opacity-90 transition duration-300 rounded-xl">
                <a href={post.url} class="flex flex-col">
                  {post.frontmatter.image?.url && (
                    <img
                      src={post.frontmatter.image.url}
                      alt={post.frontmatter.image.alt || "Imagen del artículo"}
                      class="object-cover h-56 w-full rounded-xl"
                    />
                  )}
                  <div class="p-6 flex flex-col justify-center text-white">
                    <div class="mb-2">
                      {post.frontmatter.tags.map((tag) => {
                        let borderColor =
                          tag === "dekton"
                            ? "border-yellow-600"
                            : tag === "silestone"
                            ? "border-[#dbd6ca]"
                            : "border-white";

                        return (
                          <span
                            class={`border ${borderColor} rounded-full px-4 py-1 mr-2 text-sm`}
                          >
                            {tag}
                          </span>
                        );
                      })}
                    </div>
                    <h2 class="text-2xl font-semibold my-2">{post.frontmatter.title}</h2>
                    <p class="text-sm text-zinc-300">{post.frontmatter.description}</p>
                  </div>
                </a>
              </div>
            )}
          </>
        ))
      }
    </div>
  </section>
</BaseLayout>
